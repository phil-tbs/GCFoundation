//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GCFoundation.Web.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Components {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Components() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GCFoundation.Web.Resources.Components", typeof(Components).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismissible Badge.
        /// </summary>
        public static string Badges_Dismissible_Title {
            get {
                return ResourceManager.GetString("Badges_Dismissible_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to inverted.
        /// </summary>
        public static string Badges_Inverted_Anchor {
            get {
                return ResourceManager.GetString("Badges_Inverted_Anchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the &lt;code&gt;inverted=&quot;true&quot;&lt;/code&gt; attribute to render badges with transparent backgrounds..
        /// </summary>
        public static string Badges_Inverted_Text {
            get {
                return ResourceManager.GetString("Badges_Inverted_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inverted Variants.
        /// </summary>
        public static string Badges_Inverted_Title {
            get {
                return ResourceManager.GetString("Badges_Inverted_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &lt;code&gt;slot=&quot;start-content&quot;&lt;/code&gt; and &lt;code&gt;slot=&quot;end-content&quot;&lt;/code&gt; when embedding HTML..
        /// </summary>
        public static string Badges_Notes_1 {
            get {
                return ResourceManager.GetString("Badges_Notes_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For font icons, use libraries like Font Awesome or Bootstrap Icons..
        /// </summary>
        public static string Badges_Notes_2 {
            get {
                return ResourceManager.GetString("Badges_Notes_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All badges are rendered as &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements with class &lt;code&gt;fdcp-badge&lt;/code&gt;..
        /// </summary>
        public static string Badges_Notes_3 {
            get {
                return ResourceManager.GetString("Badges_Notes_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to notes.
        /// </summary>
        public static string Badges_Notes_Anchor {
            get {
                return ResourceManager.GetString("Badges_Notes_Anchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notes.
        /// </summary>
        public static string Badges_Notes_Title {
            get {
                return ResourceManager.GetString("Badges_Notes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to overview.
        /// </summary>
        public static string Badges_Overview_Anchor {
            get {
                return ResourceManager.GetString("Badges_Overview_Anchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;code&gt;&amp;lt;fdcp-badge&amp;gt;&lt;/code&gt; component is used to highlight small pieces of information....
        /// </summary>
        public static string Badges_Overview_Text {
            get {
                return ResourceManager.GetString("Badges_Overview_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string Badges_Overview_Title {
            get {
                return ResourceManager.GetString("Badges_Overview_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to parameters.
        /// </summary>
        public static string Badges_Parameters_Anchor {
            get {
                return ResourceManager.GetString("Badges_Parameters_Anchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional HTML to append after the badge content..
        /// </summary>
        public static string Badges_Parameters_EndContent {
            get {
                return ResourceManager.GetString("Badges_Parameters_EndContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies an inverted, outline-style badge..
        /// </summary>
        public static string Badges_Parameters_Inverted {
            get {
                return ResourceManager.GetString("Badges_Parameters_Inverted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional HTML to prepend before the badge content..
        /// </summary>
        public static string Badges_Parameters_StartContent {
            get {
                return ResourceManager.GetString("Badges_Parameters_StartContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Badge style (Primary, Success, Danger, Info, etc.).
        /// </summary>
        public static string Badges_Parameters_Style {
            get {
                return ResourceManager.GetString("Badges_Parameters_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional &lt;code&gt;id&lt;/code&gt; attribute for the badge element..
        /// </summary>
        public static string Badges_Parameters_TagId {
            get {
                return ResourceManager.GetString("Badges_Parameters_TagId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        public static string Badges_Parameters_Title {
            get {
                return ResourceManager.GetString("Badges_Parameters_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start-end.
        /// </summary>
        public static string Badges_Slot_Anchor {
            get {
                return ResourceManager.GetString("Badges_Slot_Anchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can insert an icon or button at the start or end using either the &lt;code&gt;slot&lt;/code&gt; attribute or the &lt;code&gt;StartContent&lt;/code&gt;/&lt;code&gt;EndContent&lt;/code&gt; properties..
        /// </summary>
        public static string Badges_Slot_Text {
            get {
                return ResourceManager.GetString("Badges_Slot_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start and End.
        /// </summary>
        public static string Badges_Slot_Title {
            get {
                return ResourceManager.GetString("Badges_Slot_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to solid.
        /// </summary>
        public static string Badges_Solid_Anchor {
            get {
                return ResourceManager.GetString("Badges_Solid_Anchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These badges use a solid background..
        /// </summary>
        public static string Badges_Solid_Text {
            get {
                return ResourceManager.GetString("Badges_Solid_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solid Variants.
        /// </summary>
        public static string Badges_Solid_Title {
            get {
                return ResourceManager.GetString("Badges_Solid_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FDCP Badge Documentation.
        /// </summary>
        public static string Badges_Title {
            get {
                return ResourceManager.GetString("Badges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GC Design System Components.
        /// </summary>
        public static string GcdsHeading {
            get {
                return ResourceManager.GetString("GcdsHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find all components in the
        ///&lt;gcds-link href=&quot;https://design-system.alpha.canada.ca/en/components/&quot; target=&quot;_blank&quot; external&gt;
        /// GC Design System documentation
        ///&lt;/gcds-link&gt;..
        /// </summary>
        public static string GcdsLinkText {
            get {
                return ResourceManager.GetString("GcdsLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All GC Design System components are compatible out of the box. Just make sure the library is configured to point to the latest version. If the version was recently updated, you may not yet see autocomplete suggestions in Foundation..
        /// </summary>
        public static string GcdsParagraph1 {
            get {
                return ResourceManager.GetString("GcdsParagraph1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use GC Design System components, you’ll need to use the Web Component code. The components should also appear in Visual Studio if they have been implemented. However, even if a component doesn&apos;t appear in IntelliSense, you can still use it—just make sure you’re referencing the correct version of the GC Design System..
        /// </summary>
        public static string GcdsParagraph2 {
            get {
                return ResourceManager.GetString("GcdsParagraph2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always Enabled.
        /// </summary>
        public static string GlobalResources_AlwaysEnabled {
            get {
                return ResourceManager.GetString("GlobalResources_AlwaysEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSS Loading Order.
        /// </summary>
        public static string GlobalResources_CssLoadingOrder_Title {
            get {
                return ResourceManager.GetString("GlobalResources_CssLoadingOrder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following resources are currently configured to be loaded globally:.
        /// </summary>
        public static string GlobalResources_CurrentConfiguration_Description {
            get {
                return ResourceManager.GetString("GlobalResources_CurrentConfiguration_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Configuration.
        /// </summary>
        public static string GlobalResources_CurrentConfiguration_Title {
            get {
                return ResourceManager.GetString("GlobalResources_CurrentConfiguration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default CSS:.
        /// </summary>
        public static string GlobalResources_DefaultCss_Label {
            get {
                return ResourceManager.GetString("GlobalResources_DefaultCss_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Default foundation CSS and JavaScript files are always included and cannot be disabled. This ensures that all GCFoundation components work properly on every page..
        /// </summary>
        public static string GlobalResources_DefaultFilesNote {
            get {
                return ResourceManager.GetString("GlobalResources_DefaultFilesNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default JavaScript:.
        /// </summary>
        public static string GlobalResources_DefaultJavaScript_Label {
            get {
                return ResourceManager.GetString("GlobalResources_DefaultJavaScript_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page demonstrates how to use the new global resources configuration feature in GCFoundation. You can configure CSS, JavaScript, meta tags, and link tags globally through the appsettings.json file..
        /// </summary>
        public static string GlobalResources_Description {
            get {
                return ResourceManager.GetString("GlobalResources_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        public static string GlobalResources_Disabled {
            get {
                return ResourceManager.GetString("GlobalResources_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string GlobalResources_Enabled {
            get {
                return ResourceManager.GetString("GlobalResources_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font Awesome:.
        /// </summary>
        public static string GlobalResources_FontAwesome_Label {
            get {
                return ResourceManager.GetString("GlobalResources_FontAwesome_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GCDS Resources:.
        /// </summary>
        public static string GlobalResources_GCDSResources_Label {
            get {
                return ResourceManager.GetString("GlobalResources_GCDSResources_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global CSS Files.
        /// </summary>
        public static string GlobalResources_GlobalCssFiles_Title {
            get {
                return ResourceManager.GetString("GlobalResources_GlobalCssFiles_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global JavaScript Files.
        /// </summary>
        public static string GlobalResources_GlobalJavaScriptFiles_Title {
            get {
                return ResourceManager.GetString("GlobalResources_GlobalJavaScriptFiles_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Link Tags.
        /// </summary>
        public static string GlobalResources_GlobalLinkTags_Title {
            get {
                return ResourceManager.GetString("GlobalResources_GlobalLinkTags_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Meta Tags.
        /// </summary>
        public static string GlobalResources_GlobalMetaTags_Title {
            get {
                return ResourceManager.GetString("GlobalResources_GlobalMetaTags_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To configure global resources, update your appsettings.json file:.
        /// </summary>
        public static string GlobalResources_HowToConfigure_Description {
            get {
                return ResourceManager.GetString("GlobalResources_HowToConfigure_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to Configure.
        /// </summary>
        public static string GlobalResources_HowToConfigure_Title {
            get {
                return ResourceManager.GetString("GlobalResources_HowToConfigure_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JavaScript Loading Order.
        /// </summary>
        public static string GlobalResources_JavaScriptLoadingOrder_Title {
            get {
                return ResourceManager.GetString("GlobalResources_JavaScriptLoadingOrder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources are loaded in the following order:.
        /// </summary>
        public static string GlobalResources_LoadingOrder_Description {
            get {
                return ResourceManager.GetString("GlobalResources_LoadingOrder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource Loading Order.
        /// </summary>
        public static string GlobalResources_LoadingOrder_Title {
            get {
                return ResourceManager.GetString("GlobalResources_LoadingOrder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No global CSS files configured..
        /// </summary>
        public static string GlobalResources_NoCssFiles {
            get {
                return ResourceManager.GetString("GlobalResources_NoCssFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No global JavaScript files configured..
        /// </summary>
        public static string GlobalResources_NoJavaScriptFiles {
            get {
                return ResourceManager.GetString("GlobalResources_NoJavaScriptFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No global link tags configured..
        /// </summary>
        public static string GlobalResources_NoLinkTags {
            get {
                return ResourceManager.GetString("GlobalResources_NoLinkTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No global meta tags configured..
        /// </summary>
        public static string GlobalResources_NoMetaTags {
            get {
                return ResourceManager.GetString("GlobalResources_NoMetaTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following settings control which optional resources are included:.
        /// </summary>
        public static string GlobalResources_ResourceInclusion_Description {
            get {
                return ResourceManager.GetString("GlobalResources_ResourceInclusion_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource Inclusion Settings.
        /// </summary>
        public static string GlobalResources_ResourceInclusion_Title {
            get {
                return ResourceManager.GetString("GlobalResources_ResourceInclusion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Resources Configuration.
        /// </summary>
        public static string GlobalResources_Title {
            get {
                return ResourceManager.GetString("GlobalResources_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can also use the GlobalResourceHelper in your Razor views for more control:.
        /// </summary>
        public static string GlobalResources_UsingHelper_Description {
            get {
                return ResourceManager.GetString("GlobalResources_UsingHelper_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using GlobalResourceHelper in Views.
        /// </summary>
        public static string GlobalResources_UsingHelper_Title {
            get {
                return ResourceManager.GetString("GlobalResources_UsingHelper_Title", resourceCulture);
            }
        }
    }
}
