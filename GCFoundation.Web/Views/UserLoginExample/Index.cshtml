@using GCFoundation.Web.Resources
@{
    ViewData["Title"] = Components.UserLogin_PageTitle;
}

<gcds-container size="xl" centered>
    <gcds-grid columns="1fr" columns-tablet="1fr" columns-desktop="1fr">
        <div>
            <gcds-heading tag="h1">@Components.UserLogin_PageTitle</gcds-heading>
            <gcds-text>
                @Components.UserLogin_PageDescription
            </gcds-text>
        </div>
    </gcds-grid>

    <!-- Authentication Status -->
    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <section class="demo-panel demo-panel--accent" aria-labelledby="auth-status-title">
            <div class="demo-panel__header">
                <gcds-heading tag="h2" size="h4" id="auth-status-title">@Components.UserLogin_AuthStatus_Title</gcds-heading>
            </div>
            <div class="demo-panel__body">
                @if (User?.Identity?.IsAuthenticated == true)
                {
                    <gcds-notice type="Success" notice-title-tag="h2" notice-title="Authenticated">
                        <gcds-text>@string.Format(Components.UserLogin_Authenticated_Message, User.Identity.Name ?? "Demo User")</gcds-text>
                    </gcds-notice>
                }
                else
                {
                    <gcds-notice type="Info" notice-title-tag="h2" notice-title="Not Authenticated">
                        <gcds-text>@Components.UserLogin_NotAuthenticated_Message</gcds-text>
                    </gcds-notice>
                }
            </div>
        </section>
    </gcds-grid>

    <gcds-grid columns="1fr" columns-tablet="1fr 1fr" columns-desktop="1fr 1fr" class="fdcp-mt-300" equal-row-height>
        <fdcp-card>
            <gcds-text>@Components.UserLogin_TestAuthStates</gcds-text>
            <div class="fdcp-mt-200">
                <form method="post" asp-action="SimulateLogin" class="fdcp-d-inline-block">
                    @Html.AntiForgeryToken()
                    <gcds-button button-role="primary" type="submit">
                        @Components.UserLogin_SimulateLogin
                    </gcds-button>
                </form>
                <form method="post" asp-action="SimulateLogout" class="fdcp-d-inline-block">
                    @Html.AntiForgeryToken()
                    <gcds-button button-role="secondary" type="submit">
                        @Components.UserLogin_SimulateLogout
                    </gcds-button>
                </form>
            </div>
        </fdcp-card>

        <fdcp-card>
            <gcds-text>@Components.UserLogin_ApiTest_Message<a href="@Url.Action("GetUserInfo")"> @Components.UserLogin_ApiTest_Link</a> </gcds-text>
        </fdcp-card>
    </gcds-grid>

    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_ConfigurationOptions</gcds-heading>
            <gcds-text>
                @Components.UserLogin_ConfigDescription
            </gcds-text>
            
            <gcds-details details-title="Configuration Settings" class="fdcp-mt-200">
                <pre class="language-json"><code>{
  "UserLoginSettings": {
    "ShowUserName": true,
    "ShowUserEmail": false,
    "ShowLoginTime": false,
    "ShowSessionTimeout": true,
    "ShowLogoutButton": true,
    "ShowProfileLink": false,
    "ProfileUrl": "/profile",
    "LogoutUrl": "/authentication/logout",
    "LoginUrl": "/authentication/login",
    "ContainerCssClasses": "fdcp-mb-200",
    "ShowUserAvatar": false,
    "CustomGreetingKey": "WelcomeMessage",
    "Position": "header"
  }
}</code></pre>
            </gcds-details>

            <gcds-details details-title="Usage in Controllers" class="fdcp-mt-200">
                <pre class="language-csharp"><code>// In your controller
public IActionResult Index()
{
    // Set the login partial to be used in the layout
    ViewData["LoginPartialViewName"] = "_UserLoginPartial";
    
    return View();
}

// Or create a custom model
public IActionResult CustomLogin()
{
    var userModel = _userLoginService.CreateViewModel(
        userName: "John Doe",
        userEmail: "john.doe@example.com",
        firstName: "John",
        lastName: "Doe",
        userRole: "Developer",
        department: "IT",
        loginTime: DateTime.UtcNow.AddMinutes(-30)
    );
    
    return View(userModel);
}</code></pre>
            </gcds-details>

            <gcds-details details-title="Usage in Views" class="fdcp-mt-200">
                <pre class="language-cshtml"><code>@using GCFoundation.Components.Models
@using GCFoundation.Components.Services
@inject UserLoginService UserLoginService

@{
    var loginModel = UserLoginService.CreateViewModelFromContext();
}

&lt;partial name="_UserLoginPartial" model="loginModel" /&gt;</code></pre>
            </gcds-details>
        </div>
    </gcds-grid>

    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_Features</gcds-heading>
            <ul>
                <li><gcds-text>@Components.UserLogin_Feature_Bilingual</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_Configurable</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_CompactFull</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_SessionTimeout</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_Avatar</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_GCDS</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_Responsive</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_Accessibility</gcds-text></li>
                <li><gcds-text>@Components.UserLogin_Feature_Integration</gcds-text></li>
            </ul>
        </div>
    </gcds-grid>
</gcds-container>

@* Styles moved to SCSS bundle (fdcp-demo-panel) *@

