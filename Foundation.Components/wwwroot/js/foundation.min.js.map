{"version":3,"sources":["components/fdcp-datatable.js","components/fdcp-modal.js"],"names":["debounce","func","wait","timeout","_this","this","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","openGlobalModal","options","modalTitle","document","querySelector","modalBody","modalFooter","innerHTML","title","body","footer","bootstrap","Modal","getElementById","show","openConfirmModal","message","confirmCallback","concat","onclick","getInstance","hide","openSessionTimeoutWarning","timeoutCallback","querySelectorAll","forEach","el","config","layout","dataset","pagination","paginationSize","parseInt","columns","height","JSON","parse","e","console","error","set","data","ajaxurl","ajaxURL","filterMode","sortMode","ajaxConfig","ajaxContentType","paginationMode","Tabulator","addEventListener","tabulatorId","target","table","findTable","value","trim","clearFilter","log","getColumns","fields","filter","col","getDefinition","map","getField","setFilter","field","type"],"mappings":"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","file":"foundation.min.js","sourcesContent":["document.querySelectorAll('.tabulator-table').forEach(el => {\r\n    const config = {\r\n        layout: el.dataset.layout || \"fitColumns\",\r\n        pagination: true,\r\n        paginationSize: parseInt(el.dataset.paginationSize || \"10\"),\r\n        columns: [],\r\n        height: '100%'\r\n    };\r\n\r\n    // Parse columns\r\n    if (el.dataset.columns) {\r\n        try {\r\n            config.columns = JSON.parse(el.dataset.columns);\r\n        } catch (e) {\r\n            console.error(\"Failed to parse columns:\", e);\r\n        }\r\n    }\r\n\r\n    if (el.dataset.set) {\r\n        config.data = JSON.parse(el.dataset.set);\r\n    } else if (el.dataset.ajaxurl) {\r\n        config.ajaxURL = el.dataset.ajaxurl;\r\n        config.filterMode = \"remote\";\r\n        config.sortMode = \"remote\";\r\n        config.ajaxConfig = \"POST\";\r\n        config.ajaxContentType = \"json\";\r\n        config.paginationMode = \"remote\";\r\n        config.filterMode = \"remote\";\r\n    }\r\n\r\n\r\n    new Tabulator(el, config);\r\n});\r\n\r\ndocument.querySelectorAll('.tabulator-search-input').forEach(el => {\r\n    el.addEventListener(\"input\", debounce(function (e) {\r\n        let tabulatorId = e.target.dataset.tabulatorId;\r\n        let table = Tabulator.findTable(\"#\" + tabulatorId)[0];\r\n        const value = e.target.value.trim();\r\n\r\n        if (!table) return;\r\n\r\n        if (value === \"\") {\r\n            table.clearFilter();\r\n        } else {\r\n            console.log(table.getColumns());\r\n            const fields = table.getColumns()\r\n                .filter(col => {\r\n                    const def = col.getDefinition();\r\n                    return def.filter; // Only fields with headerFilter enabled\r\n                })\r\n                .map(col => col.getField());\r\n\r\n\r\n            table.setFilter(\r\n                fields.map(field => ({ field: field, type: \"like\", value: value }))\r\n            );\r\n        }\r\n    }, 200)); // 200ms debounce\r\n});\r\n\r\nfunction debounce(func, wait) {\r\n    let timeout;\r\n    return function (...args) {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => func.apply(this, args), wait);\r\n    };\r\n}\r\n","    // Open the global modal with custom title/body/footer\r\n    function openGlobalModal(options) {\r\n        const modalTitle = document.querySelector('#globalModal .modal-title');\r\n    const modalBody = document.querySelector('#globalModalBody');\r\n    const modalFooter = document.querySelector('#globalModalFooter');\r\n\r\n    if (modalTitle) modalTitle.innerHTML = options.title || '';\r\n    if (modalBody) modalBody.innerHTML = options.body || '';\r\n    if (modalFooter) modalFooter.innerHTML = options.footer || '';\r\n\r\n    const modal = new bootstrap.Modal(document.getElementById('globalModal'));\r\n    modal.show();\r\n    }\r\n\r\n    // Example helper to open a confirmation modal\r\n    function openConfirmModal(message, confirmCallback) {\r\n        openGlobalModal({\r\n            title: 'Confirm Action',\r\n            body: `<p>${message}</p>`,\r\n            footer: `\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"globalModalConfirmButton\">Confirm</button>\r\n            `\r\n        });\r\n\r\n        // Attach confirm callback after rendering\r\n        setTimeout(() => {\r\n        document.getElementById('globalModalConfirmButton').onclick = function () {\r\n            confirmCallback();\r\n            bootstrap.Modal.getInstance(document.getElementById('globalModal')).hide();\r\n        };\r\n        }, 100); \r\n    }\r\n\r\n    // Example for session timeout warning\r\n    function openSessionTimeoutWarning(timeoutCallback) {\r\n        openGlobalModal({\r\n            title: 'Session Expiring Soon',\r\n            body: `<p>Your session is about to expire. Do you want to continue?</p>`,\r\n            footer: `\r\n                <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Logout</button>\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"globalModalContinueSessionButton\">Continue</button>\r\n            `\r\n        });\r\n\r\n        setTimeout(() => {\r\n        document.getElementById('globalModalContinueSessionButton').onclick = function () {\r\n            timeoutCallback();\r\n            bootstrap.Modal.getInstance(document.getElementById('globalModal')).hide();\r\n        };\r\n        }, 100);\r\n    }\r\n\r\n"]}