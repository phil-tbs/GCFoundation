using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Foundation.Components.Enum;
using Microsoft.AspNetCore.Razor.TagHelpers;

namespace Foundation.Components.TagHelpers
{
    /// <summary>
    /// A TagHelper that renders a GC Design System card component as a <c>&lt;gcds-card&gt;</c> element.
    /// The card component is used to display content in a stylized container with optional title, description, badge, and image.
    /// </summary>
    [HtmlTargetElement("gcds-card")]
    public class CardTagHelper : BaseTagHelper
    {
        /// <summary>
        /// Gets or sets the title of the card. This is the main heading of the card.
        /// </summary>
        public required string CardTitle { get; set; }

        /// <summary>
        /// Gets or sets the HTML heading tag used for the card title. Default is <see cref="CardTitleTag.h3"/>.
        /// </summary>
        public CardTitleTag CardTitleTag { get; set; } = CardTitleTag.h3;

        /// <summary>
        /// Gets or sets the hyperlink URL that the card should link to.
        /// </summary>
        public required string Href {  get; set; }

        /// <summary>
        /// Gets or sets the badge text displayed on the card. This can be used for labels or indicators.
        /// </summary>
        public string? Badge { get; set; }

        /// <summary>
        /// Gets or sets the description text displayed on the card.
        /// </summary>
        public string? Description { get; set; }

        /// <summary>
        /// Gets or sets the alternative text for the image displayed on the card.
        /// </summary>
        public string? ImgAlt { get; set; }

        /// <summary>
        /// Gets or sets the source URL for the image displayed on the card.
        /// </summary>
        public string? ImgSrc { get; set; }

        /// <summary>
        /// Processes the <c>gcds-card</c> element by adding the <c>card-title</c>, <c>card-title-tag</c>, <c>href</c>, <c>badge</c>, 
        /// <c>description</c>, <c>img-alt</c>, <c>img-src</c>, and <c>lang</c> attributes to the rendered output.
        /// </summary>
        /// <param name="context">The context for the tag helper.</param>
        /// <param name="output">The HTML element output generated by the tag helper.</param>
        public override void Process(TagHelperContext context, TagHelperOutput output)
        {
            AddAttributeIfNotNull(output, "card-title", CardTitle);
            AddAttributeIfNotNull(output, "card-title-tag", CardTitleTag);
            AddAttributeIfNotNull(output, "href", Href);
            AddAttributeIfNotNull(output, "badge", Badge);
            AddAttributeIfNotNull(output, "description", Description);
            AddAttributeIfNotNull(output, "img-alt", ImgAlt);
            AddAttributeIfNotNull(output, "img-src", ImgSrc);
            AddAttributeIfNotNull(output, "lang", Lang);
            
            base.Process(context, output);
        }

    }
}
