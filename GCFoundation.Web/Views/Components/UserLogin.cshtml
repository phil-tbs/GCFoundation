@using GCFoundation.Components.Services
@using GCFoundation.Components.Settings
@using GCFoundation.Components.Models
@using GCFoundation.Components.Helpers
@using Microsoft.Extensions.Options
@inject UserLoginService UserLoginService
@inject IOptions<GCFoundationUserLoginSettings> LoginSettings

@using GCFoundation.Web.Resources
@{
    ViewData["Title"] = Components.UserLogin_Component_Title;
    string styleNonce = CspNonceHelper.AddNonceToDirective(Context, DirectiveType.Style);
}

<gcds-container size="xl" centered>
    <gcds-grid columns="1fr">
        <div>
            <gcds-heading tag="h1">@Components.UserLogin_Component_Title</gcds-heading>
            <gcds-text>
                @Components.UserLogin_Component_Description
            </gcds-text>
        </div>
    </gcds-grid>

    <!-- Live Examples Section -->
    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_LiveExamples</gcds-heading>
            <gcds-text>
                @Components.UserLogin_LiveExamples_Description
            </gcds-text>
        </div>
    </gcds-grid>

    <!-- Live Example with Actual Authentication State -->
    <gcds-grid columns="1fr" class="fdcp-mt-300">
        <div>
            <gcds-heading tag="h3" size="h4" >@Components.UserLogin_CurrentUserState</gcds-heading>
            <gcds-text class="fdcp-mb-200">
                @Components.UserLogin_CurrentUserState_Description
                @if (User?.Identity?.IsAuthenticated == true)
                {
                    <span>@Html.Raw(Components.UserLogin_CurrentlyAuthenticated)</span>
                }
                else
                {
                    <span>@Html.Raw(Components.UserLogin_CurrentlyNotAuthenticated)</span>
                }
            </gcds-text>
            @{
                var currentUser = UserLoginService.CreateViewModelFromContext();
                currentUser.Settings.ShowUserEmail = true;
                currentUser.Settings.ShowLoginTime = true;
                currentUser.Settings.ShowUserAvatar = true;
                currentUser.Settings.ShowSessionTimeout = true;
            }
            <partial name="_UserLoginPartial" model="currentUser" />
            
            @if (User?.Identity?.IsAuthenticated != true)
            {
                <div class="fdcp-mt-200">
                    <gcds-text>@Components.UserLogin_SimulateLoginNote</gcds-text>
                </div>
            }
        </div>
    </gcds-grid>

    <!-- Static Examples Grid -->
    <gcds-grid columns="1fr" columns-tablet="1fr 1fr" columns-desktop="1fr 1fr" class="fdcp-mt-300" equal-row-height>
        <fdcp-card>
            <gcds-heading tag="h3" size="h4" >@Components.UserLogin_DefaultMode</gcds-heading>
            <gcds-text class="fdcp-mb-200">@Components.UserLogin_DefaultMode_Description</gcds-text>
            @{
                var defaultUser = UserLoginService.CreateViewModel(
                    userName: "Marie Dubois",
                    userEmail: "marie.dubois@canada.ca",
                    firstName: "Marie",
                    lastName: "Dubois",
                    userRole: "Senior Developer",
                    department: "Digital Services",
                    loginTime: DateTime.UtcNow.AddMinutes(-45),
                    sessionExpiry: DateTime.UtcNow.AddMinutes(15)
                );
                defaultUser.Settings.ShowUserEmail = true;
                defaultUser.Settings.ShowLoginTime = true;
                defaultUser.Settings.ShowUserAvatar = true;
            }
            <partial name="_UserLoginPartial" model="defaultUser" />
        </fdcp-card>

        <fdcp-card>
            <gcds-heading tag="h3" size="h4" >@Components.UserLogin_SessionExpiring</gcds-heading>
            <gcds-text class="fdcp-mb-200">@Components.UserLogin_SessionExpiring_Description</gcds-text>
            @{
                var expiringUser = UserLoginService.CreateViewModel(
                    userName: "Sarah Johnson",
                    userEmail: "sarah.johnson@canada.ca",
                    firstName: "Sarah",
                    lastName: "Johnson",
                    userRole: "UX Designer",
                    department: "User Experience",
                    loginTime: DateTime.UtcNow.AddMinutes(-115),
                    sessionExpiry: DateTime.UtcNow.AddMinutes(2) // Expires in 2 minutes
                );
                expiringUser.Settings.ShowSessionTimeout = true;
                expiringUser.Settings.ShowUserAvatar = true;
            }
            <partial name="_UserLoginPartial" model="expiringUser" />
        </fdcp-card>
    </gcds-grid>

    <!-- Not Authenticated Example -->
    <gcds-grid columns="1fr" class="fdcp-mt-200">
        <div>
            <gcds-heading tag="h3" size="h4" >@Components.UserLogin_NotAuthenticatedState</gcds-heading>
            <gcds-text class="fdcp-mb-200">@Components.UserLogin_NotAuthenticatedState_Description</gcds-text>
            @{
                var anonymousUser = UserLoginService.CreateAnonymousViewModel();
            }
            <partial name="_UserLoginPartial" model="anonymousUser" />
        </div>
    </gcds-grid>

    <!-- Configuration Section -->
    <gcds-grid columns="1fr" class="fdcp-mt-500">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_ConfigurationOptions</gcds-heading>
            <gcds-text>
                @Components.UserLogin_ConfigOptions_Description
            </gcds-text>
        </div>
    </gcds-grid>

        <gcds-details details-title="appsettings.json Configuration">
            <pre class="language-json"><code>{
  "UserLoginSettings": {
    "ShowUserName": true,
    "ShowUserEmail": false,
    "ShowLoginTime": false,
    "ShowSessionTimeout": true,
    "ShowLogoutButton": true,
    "ShowProfileLink": false,
    "ProfileUrl": "/profile",
    "LogoutUrl": "/authentication/logout",
    "LoginUrl": "/authentication/login",
    "ContainerCssClasses": "fdcp-mb-200",
    "ShowUserAvatar": false,
    "CustomGreetingKey": null,
    "Position": "header"
  }
}</code></pre>
        </gcds-details>

        <gcds-details details-title="Controller Usage">
            <pre class="language-csharp"><code>public class HomeController : GCFoundationBaseController
{
    public IActionResult Index()
    {
        // Enable the user login partial in layout
        ViewData["LoginPartialViewName"] = "_UserLoginPartial";
        return View();
    }
}</code></pre>
        </gcds-details>

        <gcds-details details-title="Custom View Usage">
            <pre class="language-cshtml"><code>@@using GCFoundation.Components.Services
@@inject UserLoginService UserLoginService

@@{
    var userModel = UserLoginService.CreateViewModelFromContext();
}

&lt;partial name="_UserLoginPartial" model="userModel" /&gt;</code></pre>
        </gcds-details>

        <gcds-details details-title="Programmatic Configuration">
            <pre class="language-csharp"><code>var customSettings = new GCFoundationUserLoginSettings
{
    ShowUserEmail = true,
    ShowUserAvatar = true,
    ShowSessionTimeout = true
};

var userModel = _userLoginService.CreateViewModel(/* user info */);
userModel.Settings = customSettings;</code></pre>
        </gcds-details>

    <!-- Authentication Methods -->
    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_SupportedAuthMethods</gcds-heading>
            <gcds-text>
                @Components.UserLogin_SupportedAuthMethods_Description
            </gcds-text>
            
            <gcds-grid columns="1fr" columns-tablet="1fr 1fr" class="fdcp-mt-300">
                <div>
                    <gcds-heading tag="h3" size="h4" >@Components.UserLogin_CookieAuth</gcds-heading>
                    <gcds-text>
                        @Components.UserLogin_CookieAuth_Description
                    </gcds-text>
                    <gcds-text class="fdcp-mt-200">
                        @Html.Raw(Components.UserLogin_CookieAuth_Benefits)
                    </gcds-text>
                </div>
                
                <div>
                    <gcds-heading tag="h3" size="h4" >@Components.UserLogin_AzureAD</gcds-heading>
                    <gcds-text>
                        @Components.UserLogin_AzureAD_Description
                    </gcds-text>
                    <gcds-text class="fdcp-mt-200">
                        @Html.Raw(Components.UserLogin_AzureAD_Benefits)
                    </gcds-text>
                </div>
                
                <div>
                    <gcds-heading tag="h3" size="h4" >@Components.UserLogin_JWTTokens</gcds-heading>
                    <gcds-text>
                        @Components.UserLogin_JWTTokens_Description
                    </gcds-text>
                    <gcds-text class="fdcp-mt-200">
                        @Html.Raw(Components.UserLogin_JWTTokens_Benefits)
                    </gcds-text>
                </div>
                
                <div>
                    <gcds-heading tag="h3" size="h4" >@Components.UserLogin_ExternalProviders</gcds-heading>
                    <gcds-text>
                        @Components.UserLogin_ExternalProviders_Description
                    </gcds-text>
                    <gcds-text class="fdcp-mt-200">
                        @Html.Raw(Components.UserLogin_ExternalProviders_Benefits)
                    </gcds-text>
                </div>
            </gcds-grid>
        </div>
    </gcds-grid>

    <!-- Documentation Links -->
    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_AdditionalResources</gcds-heading>
            <gcds-grid columns="1fr" columns-tablet="1fr 1fr 1fr" class="fdcp-mt-200" equal-row-height>

                <gcds-card card-title="@Components.UserLogin_CompleteExamples" href="@Url.Action("Index", "UserLoginExample")" description="@Components.UserLogin_CompleteExamples_Description" card-title-tag="h4">
                </gcds-card>
                
                <gcds-card card-title="@Components.UserLogin_StatelessAuth" href="@Url.Action("Index", "StatelessAuthExample")" description="@Components.UserLogin_StatelessAuth_Description" card-title-tag="h4">
                </gcds-card>

                <gcds-card card-title="@Components.UserLogin_TemplateIntegration" href="@Url.Action("Index", "Template")" description="@Components.UserLogin_TemplateIntegration_Description" card-title-tag="h4">
                </gcds-card>

            </gcds-grid>
        </div>
    </gcds-grid>

    <!-- Implementation Guide -->
    <gcds-grid columns="1fr" class="fdcp-mt-400">
        <div>
            <gcds-heading tag="h2">@Components.UserLogin_QuickImplementation</gcds-heading>
            <ol>
                <li>
                    <gcds-text>@Html.Raw(Components.UserLogin_Step_ConfigureSettings)</gcds-text>
                </li>
                <li>
                    <gcds-text>@Html.Raw(Components.UserLogin_Step_RegisterServices)</gcds-text>
                </li>
                <li>
                    <gcds-text>@Html.Raw(Components.UserLogin_Step_SetInController)</gcds-text>
                </li>
                <li>
                    <gcds-text>@Html.Raw(Components.UserLogin_Step_ConfigureAuth)</gcds-text>
                </li>
                <li>
                    <gcds-text>@Html.Raw(Components.UserLogin_Step_CustomizeAppearance)</gcds-text>
                </li>
            </ol>
        </div>
    </gcds-grid>
</gcds-container>

<style nonce="@styleNonce">
    pre {
        background: var(--gcds-color-background-light);
        padding: 1rem;
        border-radius: 0.25rem;
        overflow-x: auto;
        font-size: 0.875rem;
        margin: 0.5rem 0;
    }
    
    code {
        font-family: 'Courier New', monospace;
    }
    
    .user-login-partial {
        border: 2px dashed var(--gcds-color-border);
        border-radius: 0.5rem;
        margin: 1rem 0;
    }
    
</style>
