using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Foundation.Components.Enums;
using Microsoft.AspNetCore.Razor.TagHelpers;

namespace Foundation.Components.TagHelpers
{
    /// <summary>
    /// A TagHelper that renders a GC Design System header component as a <c>&lt;gcds-header&gt;</c> element.
    /// The header component typically includes a language toggle, skip-to-content link, and a signature, along with other header-related elements.
    /// </summary>
    [HtmlTargetElement("gcds-header")]
    public class HeaderTagHelper : BaseTagHelper
    {
        /// <summary>
        /// Gets or sets the URL for the language toggle link. This is typically used for switching between languages.
        /// </summary>
        public required string LangHref { get; set; }

        /// <summary>
        /// Gets or sets the URL for the "skip to content" link. This allows users to quickly jump to the main content of the page.
        /// </summary>
        public required string SkipToHerf { get; set; }

        /// <summary>
        /// Gets or sets a flag indicating whether the signature has a link. Default is <c>true</c>.
        /// </summary>
        public bool SignatureHasLink { get; set; } = true;

        /// <summary>
        /// Gets or sets the variant of the header signature. The default is <see cref="HeaderSignatureVariant.colour"/>.
        /// </summary>
        public HeaderSignatureVariant SignatureVariant { get; set; } = HeaderSignatureVariant.colour;

        /// <summary>
        /// Processes the <c>gcds-header</c> element by adding the <c>lang-href</c>, <c>skip-to-href</c>, <c>lang</c>, <c>signature-has-link</c>,
        /// and <c>signature-variant</c> attributes to the rendered output.
        /// </summary>
        /// <param name="context">The context for the tag helper.</param>
        /// <param name="output">The HTML element output generated by the tag helper.</param>
        public override void Process(TagHelperContext context, TagHelperOutput output)
        {
            AddAttributeIfNotNull(output, "lang-href", LangHref);
            AddAttributeIfNotNull(output, "skip-to-href", SkipToHerf);
            AddAttributeIfNotNull(output, "lang", Lang);
            AddAttributeIfNotNull(output, "signature-has-link", SignatureHasLink);
            AddAttributeIfNotNull(output, "signature-variant", SignatureVariant);

            base.Process(context, output);
        }
    }
}
